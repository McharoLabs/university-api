version: "3.9"

services:
  db:
    image: postgres
    container_name: postgres_db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis

  backend:
    build:
      context: ./university_api
    container_name: university-api
    command: gunicorn university_api.wsgi --bind 0.0.0.0:8000
    volumes:
      - ./university_api:/app
    ports:
      - 8000:8000
    depends_on:
      - db

  celery:
    build:
      context: ./university_api
    command: celery -A university_api worker --loglevel=info
    container_name: celery-worker
    volumes:
      - ./university_api:/app
    depends_on:
      - backend
      - redis
      - db

  beat:
    build:
      context: ./university_api
    command: celery -A university_api beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    container_name: celery-beat
    volumes:
      - ./university_api:/app
    depends_on:
      - backend
      - redis
      - db

  client:
    build:
      context: ./university-client
    container_name: university-client
    command: npm run build
    ports:
      - 5173:5173
    volumes:
      - client_build:/client/dist

  frontend1:
    build:
      context: ./university-client
    container_name: frontend1
    environment:
      - NODE_ID=frontend1
    volumes:
      - ./university-client/dist:/usr/share/nginx/html
    expose:
      - "80"

  frontend2:
    build:
      context: ./university-client
    container_name: frontend2
    environment:
      - NODE_ID=frontend2
    volumes:
      - ./university-client/dist:/usr/share/nginx/html
    expose:
      - "80"

  frontend3:
    build:
      context: ./university-client
    container_name: frontend3
    environment:
      - NODE_ID=frontend3
    volumes:
      - ./university-client/dist:/usr/share/nginx/html
    expose:
      - "80"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:8080
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - client_build:/var/www/client
      - ./university_api/staticfiles:/app/staticfiles
    depends_on:
      - client
      - backend

  nginx-lb:
    image: nginx:latest
    container_name: nginx-lb
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx-lb.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend1
      - frontend2
      - frontend3

  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080

volumes:
  client_build:
